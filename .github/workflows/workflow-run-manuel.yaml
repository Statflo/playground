name: Workflow - Run (Manual)

on:
  workflow_dispatch:
    inputs:
      packages:
        description: 'A space seperated list of packages to be built'
        required: true
        default: ''
      environment:
        description: 'Define env name (prod or dev)'     
        required: true
        default: 'dev'
      branch:
        description: 'Define branch name'     
        required: true
        default: 'master'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Debug
        run: ls

      #- name: Set Env
      #  run: echo "CHANGED_DIRECTORY=$(git diff --no-commit-id --name-only -r master | cut -d/ -f1-2 | grep -E '.*/.*')" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Get Current Pull Request
        uses: 8BitJonny/gh-get-current-pr@1.0.1
        id: pr
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          filterOutClosed: true

      - name: Check For Changed Files
        id: file_changes
        uses: tj-actions/changed-files@v5.3

      - name: Detect Changes and Handoff
        run: |
          for file in ${{ steps.file_changes.outputs.all_modified_files }}; do
            echo "File: $file" 
            CHANGED_DIRECTORY=$(echo $file | cut -d/ -f1-2 | grep -E '.*/.*')
            echo "Changed Directory: $CHANGED_DIRECTORY"
            
            file="./$CHANGED_DIRECTORY/build.properties"

            if [ -f "$file" ] ; then
              echo "$file found."
              if [ "${language}" = java ] ; then
                echo "TODO: trigger workflow for Java"
              elif [ "${language}" = javascript ]; then
                echo "TODO: trigger workflow for Javascript" 
              else 
                echo "No viable language found, skipping."
              fi
            else
              echo "build.properties not found, skipping."
            fi
          done