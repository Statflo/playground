name: Deploy

on:
  push:
    paths:
      - '**'
  workflow_dispatch:
    inputs:
      force_prod_deploy:
        description: 'Check to deploy production' 
        type: boolean
        default: false

jobs:
  merge:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: development
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          cd ${{ env.PACKAGE_NAME }}
          echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      #- name: Caching Check
      #  uses: actions/cache@v2
      #  id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #  with:
      #    path: ${ env.PACKAGE_NAME }/node_modules
      #    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #    #restore-keys: |
      #    #  ${{ runner.os }}-yarn-
    
      - name: Install dependencies
        uses: ./.github/workflows/composite/static/install
         
      - name: Build
        uses: ./.github/workflows/composite/static/build

      - name: Configure AWS credentials Dev
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_DEVELOPMENT }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEVELOPMENT }}
          aws-region: ca-central-1

      - name: Deploy Dev
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.S3_BUCKET_DEVELOPMENT }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CF_DIST_ID_DEVELOPMENT }}
          invalidation: /*
          delete-removed: true
          no-cache: false

      - name: Configure AWS credentials Prod
        if: ${{ github.event.inputs.force_prod_deploy }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_PRODUCTION }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PRODUCTION }}
          aws-region: ca-central-1

      - name: Deploy Prod
        if: ${{ github.event.inputs.force_prod_deploy }}
        uses: reggionick/s3-deploy@v3
        with:
          folder: build
          bucket: ${{ secrets.S3_BUCKET_PRODUCTION }}
          bucket-region: ${{ secrets.S3_BUCKET_REGION }}
          dist-id: ${{ secrets.CF_DIST_ID_PRODUCTION }}
          invalidation: /*
          delete-removed: true
          no-cache: false